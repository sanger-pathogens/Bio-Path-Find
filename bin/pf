#!/usr/bin/env perl

# ABSTRACT: find data for sequencing runs
# PODNAME: pf

use v5.10; # for "say"

use strict;
use warnings;

use DateTime;
use Path::Class;
use Try::Tiny;

use Bio::Path::Find::App::PathFind;

#-------------------------------------------------------------------------------

# setup. Check for config files

unless ( defined $ENV{PF_CONFIG_FILE} and
         defined $ENV{PF_LOG_FILE} ) {

  say STDERR 'ERROR: no config file defined.' if not defined $ENV{PF_CONFIG_FILE};
  say STDERR 'ERROR: no log file defined.'    if not defined $ENV{PF_LOG_FILE};
  say STDERR <<'EOF_noenv';

Before using the "pf" commands you need to have the PF_CONFIG_FILE and
PF_LOG_FILE environment variables configured for your shell. Email
"path-help@sanger.ac.uk" for help with setting it up.
EOF_noenv

  exit 1;
}

#-------------------------------------------------------------------------------

# build the log line...
my $username     = ( getpwuid($<) )[0];
my $now          = DateTime->now;
my $script_name  = $0;
my $command_line = join ' ', $now, $username, $script_name, @ARGV;

# and write it to file
my $log_fh = file($ENV{PF_LOG_FILE})->opena;

say $log_fh $command_line;

close $log_fh;

#-------------------------------------------------------------------------------

# execute the command
try {
  # we need to pass in the location of the configuration

  # ether get the config file name from the PATHFIND_CONFIG env variable:
  # Bio::Path::Find::App::PathFind->new_with_options->run;

  # or specify the config file name here:
  Bio::Path::Find::App::PathFind->new_with_command(config_file => $ENV{PF_CONFIG_FILE})->run;
} catch {
  say STDERR $_;
};

exit 0;

